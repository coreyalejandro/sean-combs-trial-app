"use strict";(()=>{var e={};e.id=606,e.ids=[606],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7954:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>x,requestAsyncStorage:()=>c,routeModule:()=>p,serverHooks:()=>m,staticGenerationAsyncStorage:()=>y});var a={};t.r(a),t.d(a,{GET:()=>l,dynamic:()=>u});var i=t(9303),s=t(8716),n=t(670),o=t(7070),d=t(2663);let u="force-dynamic";async function l(e,{params:r}){try{let e=parseInt(r.id);if(isNaN(e))return o.NextResponse.json({error:"Invalid trial day ID"},{status:400});let t=await d._.trialDay.findFirst({where:{trialDayNumber:e},include:{testimonies:{include:{witness:!0}},evidence:!0}});if(!t)return o.NextResponse.json({error:"Trial day not found"},{status:404});return o.NextResponse.json(t)}catch(e){return console.error("Error fetching trial day:",e),o.NextResponse.json({error:"Failed to fetch trial day"},{status:500})}}let p=new i.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/trial-days/[id]/route",pathname:"/api/trial-days/[id]",filename:"route",bundlePath:"app/api/trial-days/[id]/route"},resolvedPagePath:"/Users/coreyalejandro/Repos/sean-combs-trial-app/app/api/trial-days/[id]/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:y,serverHooks:m}=p,h="/api/trial-days/[id]/route";function x(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:y})}},2663:(e,r,t)=>{t.d(r,{_:()=>i});let a=require("@prisma/client"),i=globalThis.prisma??new a.PrismaClient({log:["query"]})}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[276,972],()=>t(7954));module.exports=a})();